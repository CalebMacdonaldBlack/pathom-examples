<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="637c114c-5487-480f-807c-2ab5c2ce974e" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DepsLocalSettings">
    <option name="repoId" value="" />
    <option name="repoUrl" value="" />
  </component>
  <component name="DepsProjectDetails">
    <option name="cachedModuleDetails">
      <map>
        <entry key="$PROJECT_DIR$/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;/Users/calebmacdonaldblack/IdeaProjects/pathom-example/src/main/clj&quot; &quot;/Users/calebmacdonaldblack/IdeaProjects/pathom-example/src/main/resources&quot;], :deps {org.clojure/clojure {:mvn/version &quot;1.11.1&quot;}, com.taoensso/tufte {:mvn/version &quot;2.3.0&quot;}, com.stuartsierra/component {:mvn/version &quot;1.1.0&quot;}, com.wsscode/pathom3 {:mvn/version &quot;2021.07.30-alpha&quot;}, environ/environ {:mvn/version &quot;1.2.0&quot;}, com.fzakaria/slf4j-timbre {:mvn/version &quot;0.3.21&quot;}, metosin/malli {:mvn/version &quot;0.8.9&quot;}, town.lilac/pyramid {:mvn/version &quot;3.4.0&quot;}, com.datomic/client-cloud {:mvn/version &quot;1.0.120&quot;}, http-kit/http-kit {:mvn/version &quot;2.6.0&quot;}}, :aliases {:deps {:replace-paths [], :replace-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.14.1173&quot;}, org.slf4j/slf4j-nop {:mvn/version &quot;1.7.25&quot;}}, :ns-default clojure.tools.cli.api, :ns-aliases {help clojure.tools.cli.help}}, :test {:extra-paths [&quot;/Users/calebmacdonaldblack/IdeaProjects/pathom-example/src/test/clj&quot; &quot;/Users/calebmacdonaldblack/IdeaProjects/pathom-example/src/test/resources&quot;], :extra-deps {io.github.cognitect-labs/test-runner {:git/tag &quot;v0.5.1&quot;, :git/sha &quot;dfb30dd&quot;}}, :exec-fn cognitect.test-runner.api/test}, :caleb {:extra-deps {djblue/portal {:mvn/version &quot;0.30.0&quot;}}}, :test-refresh {:extra-deps {com.jakemccrary/test-refresh {:mvn/version &quot;0.25.0&quot;}}, :main-opts [&quot;-m&quot; &quot;com.jakemccrary.test-refresh&quot;]}, :local {:extra-deps {org.clojure/tools.namespace {:mvn/version &quot;1.3.0&quot;}, com.datomic/dev-local {:mvn/version &quot;1.0.243&quot;}}, :extra-paths [&quot;/Users/calebmacdonaldblack/IdeaProjects/pathom-example/src/local/clj&quot;]}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}, &quot;cognitect-dev-tools&quot; {:url &quot;https://dev-tools.cognitect.com/maven/releases/&quot;}}, :system-aliases #{:test :deps :caleb}, :deps-tree {com.cognitect/transit-java {:mvn/version &quot;1.0.362&quot;, :deps/manifest :mvn, :dependents [com.cognitect/transit-clj], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/transit-java/1.0.362/transit-java-1.0.362.jar&quot;], :children (org.msgpack/msgpack javax.xml.bind/jaxb-api)}, org.clojure/clojure {:mvn/version &quot;1.11.1&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar&quot;], :dependents [], :children (org.clojure/core.specs.alpha org.clojure/spec.alpha)}, joda-time/joda-time {:mvn/version &quot;2.8.1&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/aws-java-sdk-core], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/joda-time/joda-time/2.8.1/joda-time-2.8.1.jar&quot;], :children ()}, commons-codec/commons-codec {:mvn/version &quot;1.15&quot;, :deps/manifest :mvn, :dependents [com.cognitect/hmac-authn com.amazonaws/aws-java-sdk-core], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar&quot;], :children ()}, org.clojure/tools.analyzer {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar&quot;], :children ()}, com.fulcrologic/guardrails {:mvn/version &quot;1.1.4&quot;, :deps/manifest :mvn, :dependents [com.wsscode/pathom3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar&quot;], :children (expound/expound)}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.62&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/core.specs.alpha/0.2.62/core.specs.alpha-0.2.62.jar&quot;], :children ()}, edn-query-language/eql {:mvn/version &quot;2021.02.28&quot;, :deps/manifest :mvn, :dependents [com.wsscode/pathom3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/edn-query-language/eql/2021.02.28/eql-2021.02.28.jar&quot;], :children ()}, com.datomic/client-api {:mvn/version &quot;1.0.58&quot;, :deps/manifest :mvn, :dependents [com.datomic/client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/datomic/client-api/1.0.58/client-api-1.0.58.jar&quot;], :children ()}, com.fasterxml.jackson.core/jackson-databind {:mvn/version &quot;2.12.3&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/jmespath-java com.fasterxml.jackson.dataformat/jackson-dataformat-cbor com.amazonaws/aws-java-sdk-core], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar&quot;], :children (com.fasterxml.jackson.core/jackson-core com.fasterxml.jackson.core/jackson-annotations)}, expound/expound {:mvn/version &quot;0.8.5&quot;, :deps/manifest :mvn, :dependents [com.fulcrologic/guardrails], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar&quot;], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.3.218&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar&quot;], :children ()}, org.clojure/tools.cli {:mvn/version &quot;1.0.206&quot;, :deps/manifest :mvn, :dependents [io.github.cognitect-labs/test-runner], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/tools.cli/1.0.206/tools.cli-1.0.206.jar&quot;], :children ()}, org.eclipse.jetty/jetty-http {:mvn/version &quot;9.4.44.v20210927&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jetty/jetty-client com.cognitect/http-client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/eclipse/jetty/jetty-http/9.4.44.v20210927/jetty-http-9.4.44.v20210927.jar&quot;], :children (org.eclipse.jetty/jetty-io)}, org.eclipse.jetty/jetty-util {:mvn/version &quot;9.4.44.v20210927&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jetty/jetty-http org.eclipse.jetty/jetty-io com.cognitect/http-client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/eclipse/jetty/jetty-util/9.4.44.v20210927/jetty-util-9.4.44.v20210927.jar&quot;], :children ()}, com.taoensso/encore {:mvn/version &quot;3.24.0&quot;, :deps/manifest :mvn, :dependents [com.taoensso/tufte], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/taoensso/encore/3.24.0/encore-3.24.0.jar&quot;], :children (com.taoensso/truss)}, io.github.cognitect-labs/test-runner {:git/tag &quot;v0.5.1&quot;, :git/sha &quot;dfb30dd6605cb6c0efc275e1df1736f6e90d4d73&quot;, :git/url &quot;https://github.com/cognitect-labs/test-runner.git&quot;, :deps/manifest :deps, :deps/root &quot;/Users/calebmacdonaldblack/.gitlibs/libs/io.github.cognitect-labs/test-runner/dfb30dd6605cb6c0efc275e1df1736f6e90d4d73&quot;, :paths [&quot;/Users/calebmacdonaldblack/.gitlibs/libs/io.github.cognitect-labs/test-runner/dfb30dd6605cb6c0efc275e1df1736f6e90d4d73/src&quot;], :dependents [], :children (org.clojure/tools.cli org.clojure/tools.namespace)}, org.clojure/tools.analyzer.jvm {:mvn/version &quot;1.2.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.async], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar&quot;], :children (org.clojure/tools.analyzer org.ow2.asm/asm org.clojure/core.memoize)}, com.cognitect/hmac-authn {:mvn/version &quot;0.1.210&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-impl-shared], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/hmac-authn/0.1.210/hmac-authn-0.1.210.jar&quot;], :children (commons-codec/commons-codec)}, com.taoensso/tufte {:mvn/version &quot;2.3.0&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/taoensso/tufte/2.3.0/tufte-2.3.0.jar&quot;], :dependents [], :children (com.taoensso/encore)}, com.cognitect/anomalies {:mvn/version &quot;0.1.12&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-impl-shared com.cognitect/hmac-authn com.cognitect/s3-creds com.datomic/client-cloud com.datomic/client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/anomalies/0.1.12/anomalies-0.1.12.jar&quot;], :children ()}, com.fasterxml.jackson.dataformat/jackson-dataformat-cbor {:mvn/version &quot;2.12.3&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/aws-java-sdk-core], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.12.3/jackson-dataformat-cbor-2.12.3.jar&quot;], :children ()}, com.googlecode.json-simple/json-simple {:mvn/version &quot;1.1.1&quot;, :exclusions #{junit/junit}, :deps/manifest :mvn, :dependents [org.msgpack/msgpack], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar&quot;], :children ()}, com.cognitect/transit-cljs {:mvn/version &quot;0.8.269&quot;, :deps/manifest :mvn, :dependents [com.wsscode/pathom3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/transit-cljs/0.8.269/transit-cljs-0.8.269.jar&quot;], :children (com.cognitect/transit-js)}, io.aviso/pretty {:mvn/version &quot;0.1.33&quot;, :deps/manifest :mvn, :dependents [com.taoensso/timbre], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar&quot;], :children ()}, com.stuartsierra/component {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/stuartsierra/component/1.1.0/component-1.1.0.jar&quot;], :dependents [], :children (com.stuartsierra/dependency)}, org.clojure/tools.namespace {:mvn/version &quot;1.3.0&quot;, :deps/manifest :mvn, :dependents [io.github.cognitect-labs/test-runner], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/tools.namespace/1.3.0/tools.namespace-1.3.0.jar&quot;], :children (org.clojure/java.classpath org.clojure/tools.reader)}, fipp/fipp {:mvn/version &quot;0.6.26&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/fipp/fipp/0.6.26/fipp-0.6.26.jar&quot;], :children (org.clojure/core.rrb-vector)}, com.fasterxml.jackson.core/jackson-core {:mvn/version &quot;2.12.3&quot;, :deps/manifest :mvn, :dependents [com.fasterxml.jackson.core/jackson-databind com.fasterxml.jackson.dataformat/jackson-dataformat-cbor], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar&quot;], :children ()}, org.ow2.asm/asm {:mvn/version &quot;9.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/ow2/asm/asm/9.2/asm-9.2.jar&quot;], :children ()}, org.apache.httpcomponents/httpcore {:mvn/version &quot;4.4.13&quot;, :deps/manifest :mvn, :dependents [org.apache.httpcomponents/httpclient], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar&quot;], :children ()}, mvxcvi/arrangement {:mvn/version &quot;2.0.0&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/mvxcvi/arrangement/2.0.0/arrangement-2.0.0.jar&quot;], :children ()}, com.wsscode/pathom3 {:mvn/version &quot;2021.07.30-alpha&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/wsscode/pathom3/2021.07.30-alpha/pathom3-2021.07.30-alpha.jar&quot;], :dependents [], :children (com.fulcrologic/guardrails edn-query-language/eql com.cognitect/transit-cljs funcool/promesa com.wsscode/cljc-misc potemkin/potemkin)}, com.cognitect/transit-js {:mvn/version &quot;0.8.874&quot;, :deps/manifest :mvn, :dependents [com.cognitect/transit-cljs], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/transit-js/0.8.874/transit-js-0.8.874.jar&quot;], :children ()}, clj-tuple/clj-tuple {:mvn/version &quot;0.2.2&quot;, :deps/manifest :mvn, :dependents [potemkin/potemkin], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/clj-tuple/clj-tuple/0.2.2/clj-tuple-0.2.2.jar&quot;], :children ()}, com.taoensso/truss {:mvn/version &quot;1.6.0&quot;, :deps/manifest :mvn, :dependents [com.taoensso/encore], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar&quot;], :children ()}, com.datomic/client {:mvn/version &quot;1.0.126&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-cloud], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/datomic/client/1.0.126/client-1.0.126.jar&quot;], :children (com.datomic/client-api com.cognitect/http-client com.datomic/query-support)}, software.amazon.ion/ion-java {:mvn/version &quot;1.0.2&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/aws-java-sdk-core], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/software/amazon/ion/ion-java/1.0.2/ion-java-1.0.2.jar&quot;], :children ()}, com.fasterxml.jackson.core/jackson-annotations {:mvn/version &quot;2.12.3&quot;, :deps/manifest :mvn, :dependents [com.fasterxml.jackson.core/jackson-databind], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar&quot;], :children ()}, riddley/riddley {:mvn/version &quot;0.1.12&quot;, :deps/manifest :mvn, :dependents [potemkin/potemkin], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/riddley/riddley/0.1.12/riddley-0.1.12.jar&quot;], :children ()}, com.cognitect/http-client {:mvn/version &quot;1.0.111&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-impl-shared com.datomic/client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/http-client/1.0.111/http-client-1.0.111.jar&quot;], :children (org.eclipse.jetty/jetty-http org.eclipse.jetty/jetty-util org.eclipse.jetty/jetty-client)}, org.javassist/javassist {:mvn/version &quot;3.18.1-GA&quot;, :deps/manifest :mvn, :dependents [org.msgpack/msgpack], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar&quot;], :children ()}, org.clojure/java.classpath {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.namespace], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar&quot;], :children ()}, commons-logging/commons-logging {:mvn/version &quot;1.2&quot;, :deps/manifest :mvn, :dependents [org.apache.httpcomponents/httpclient], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar&quot;], :children ()}, environ/environ {:mvn/version &quot;1.2.0&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/environ/environ/1.2.0/environ-1.2.0.jar&quot;], :dependents [], :children ()}, com.amazonaws/jmespath-java {:mvn/version &quot;1.12.132&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/aws-java-sdk-kms com.amazonaws/aws-java-sdk-s3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/amazonaws/jmespath-java/1.12.132/jmespath-java-1.12.132.jar&quot;], :children (com.fasterxml.jackson.core/jackson-databind)}, com.fzakaria/slf4j-timbre {:mvn/version &quot;0.3.21&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/fzakaria/slf4j-timbre/0.3.21/slf4j-timbre-0.3.21.jar&quot;], :dependents [], :children (com.taoensso/timbre org.slf4j/slf4j-api)}, borkdude/dynaload {:mvn/version &quot;0.3.4&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/borkdude/dynaload/0.3.4/dynaload-0.3.4.jar&quot;], :children ()}, org.msgpack/msgpack {:mvn/version &quot;0.6.12&quot;, :deps/manifest :mvn, :dependents [com.cognitect/transit-java], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/msgpack/msgpack/0.6.12/msgpack-0.6.12.jar&quot;], :children (com.googlecode.json-simple/json-simple org.javassist/javassist)}, com.datomic/client-impl-shared {:mvn/version &quot;1.0.98&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-cloud com.datomic/client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/datomic/client-impl-shared/1.0.98/client-impl-shared-1.0.98.jar&quot;], :children (com.cognitect/hmac-authn com.cognitect/transit-clj)}, com.amazonaws/aws-java-sdk-core {:mvn/version &quot;1.12.132&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/aws-java-sdk-kms com.amazonaws/aws-java-sdk-s3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/amazonaws/aws-java-sdk-core/1.12.132/aws-java-sdk-core-1.12.132.jar&quot;], :children (joda-time/joda-time com.fasterxml.jackson.dataformat/jackson-dataformat-cbor software.amazon.ion/ion-java org.apache.httpcomponents/httpclient)}, borkdude/edamame {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/borkdude/edamame/1.0.0/edamame-1.0.0.jar&quot;], :children ()}, com.taoensso/timbre {:mvn/version &quot;4.10.0&quot;, :deps/manifest :mvn, :dependents [com.fzakaria/slf4j-timbre], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar&quot;], :children (io.aviso/pretty)}, metosin/malli {:mvn/version &quot;0.8.9&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/metosin/malli/0.8.9/malli-0.8.9.jar&quot;], :dependents [], :children (fipp/fipp mvxcvi/arrangement borkdude/dynaload borkdude/edamame org.clojure/test.check)}, com.cognitect/transit-clj {:mvn/version &quot;1.0.329&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-impl-shared com.cognitect/s3-creds], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/transit-clj/1.0.329/transit-clj-1.0.329.jar&quot;], :children (com.cognitect/transit-java)}, com.datomic/query-support {:mvn/version &quot;0.8.28&quot;, :deps/manifest :mvn, :dependents [com.datomic/client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/datomic/query-support/0.8.28/query-support-0.8.28.jar&quot;], :children ()}, com.cognitect/s3-creds {:mvn/version &quot;1.0.27&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-cloud], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/cognitect/s3-creds/1.0.27/s3-creds-1.0.27.jar&quot;], :children (org.clojure/core.cache)}, town.lilac/cascade {:mvn/version &quot;2.0.1&quot;, :deps/manifest :mvn, :dependents [town.lilac/pyramid], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/town/lilac/cascade/2.0.1/cascade-2.0.1.jar&quot;], :children ()}, town.lilac/pyramid {:mvn/version &quot;3.4.0&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/town/lilac/pyramid/3.4.0/pyramid-3.4.0.jar&quot;], :dependents [], :children (town.lilac/cascade)}, org.apache.httpcomponents/httpclient {:mvn/version &quot;4.5.13&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/aws-java-sdk-core], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar&quot;], :children (org.apache.httpcomponents/httpcore commons-logging/commons-logging)}, org.clojure/core.rrb-vector {:mvn/version &quot;0.1.2&quot;, :deps/manifest :mvn, :dependents [fipp/fipp], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/core.rrb-vector/0.1.2/core.rrb-vector-0.1.2.jar&quot;], :children ()}, funcool/promesa {:mvn/version &quot;6.0.0&quot;, :deps/manifest :mvn, :dependents [com.wsscode/pathom3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/funcool/promesa/6.0.0/promesa-6.0.0.jar&quot;], :children ()}, org.eclipse.jetty/jetty-client {:mvn/version &quot;9.4.44.v20210927&quot;, :deps/manifest :mvn, :dependents [com.cognitect/http-client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/eclipse/jetty/jetty-client/9.4.44.v20210927/jetty-client-9.4.44.v20210927.jar&quot;], :children ()}, org.eclipse.jetty/jetty-io {:mvn/version &quot;9.4.44.v20210927&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jetty/jetty-http org.eclipse.jetty/jetty-client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/eclipse/jetty/jetty-io/9.4.44.v20210927/jetty-io-9.4.44.v20210927.jar&quot;], :children ()}, org.clojure/tools.reader {:mvn/version &quot;1.3.6&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm com.taoensso/encore org.clojure/tools.namespace], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar&quot;], :children ()}, com.wsscode/cljc-misc {:mvn/version &quot;2021.07.24&quot;, :deps/manifest :mvn, :dependents [com.wsscode/pathom3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/wsscode/cljc-misc/2021.07.24/cljc-misc-2021.07.24.jar&quot;], :children ()}, potemkin/potemkin {:mvn/version &quot;0.4.5&quot;, :deps/manifest :mvn, :dependents [com.wsscode/pathom3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/potemkin/potemkin/0.4.5/potemkin-0.4.5.jar&quot;], :children (clj-tuple/clj-tuple riddley/riddley)}, org.slf4j/slf4j-api {:mvn/version &quot;1.7.30&quot;, :deps/manifest :mvn, :dependents [com.fzakaria/slf4j-timbre], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar&quot;], :children ()}, org.clojure/test.check {:mvn/version &quot;1.1.1&quot;, :deps/manifest :mvn, :dependents [metosin/malli], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar&quot;], :children ()}, org.clojure/core.memoize {:mvn/version &quot;1.0.253&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/core.memoize/1.0.253/core.memoize-1.0.253.jar&quot;], :children ()}, com.stuartsierra/dependency {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :dependents [com.stuartsierra/component], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/stuartsierra/dependency/1.0.0/dependency-1.0.0.jar&quot;], :children ()}, com.datomic/client-cloud {:mvn/version &quot;1.0.120&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/datomic/client-cloud/1.0.120/client-cloud-1.0.120.jar&quot;], :dependents [], :children (com.cognitect/anomalies com.datomic/client com.datomic/client-impl-shared com.cognitect/s3-creds com.datomic/s3-access-keys org.clojure/core.async com.amazonaws/aws-java-sdk-s3)}, org.clojure/data.priority-map {:mvn/version &quot;1.1.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.cache], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/data.priority-map/1.1.0/data.priority-map-1.1.0.jar&quot;], :children ()}, com.datomic/s3-access-keys {:mvn/version &quot;0.1.6&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-cloud], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/datomic/s3-access-keys/0.1.6/s3-access-keys-0.1.6.jar&quot;], :children ()}, org.clojure/core.cache {:mvn/version &quot;1.0.225&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.memoize com.cognitect/s3-creds], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar&quot;], :children (org.clojure/data.priority-map)}, com.amazonaws/aws-java-sdk-kms {:mvn/version &quot;1.12.132&quot;, :deps/manifest :mvn, :dependents [com.amazonaws/aws-java-sdk-s3], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/amazonaws/aws-java-sdk-kms/1.12.132/aws-java-sdk-kms-1.12.132.jar&quot;], :children ()}, org.clojure/core.async {:mvn/version &quot;1.5.648&quot;, :deps/manifest :mvn, :dependents [com.datomic/client-impl-shared com.cognitect/hmac-authn com.cognitect/s3-creds com.datomic/client-api com.datomic/client-cloud com.datomic/client com.cognitect/http-client], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar&quot;], :children (org.clojure/tools.analyzer.jvm)}, javax.xml.bind/jaxb-api {:mvn/version &quot;2.3.0&quot;, :deps/manifest :mvn, :dependents [com.cognitect/transit-java], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar&quot;], :children ()}, com.amazonaws/aws-java-sdk-s3 {:mvn/version &quot;1.12.132&quot;, :deps/manifest :mvn, :dependents [com.cognitect/s3-creds com.datomic/client-cloud], :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/com/amazonaws/aws-java-sdk-s3/1.12.132/aws-java-sdk-s3-1.12.132.jar&quot;], :children (com.amazonaws/jmespath-java com.amazonaws/aws-java-sdk-core com.amazonaws/aws-java-sdk-kms)}, http-kit/http-kit {:mvn/version &quot;2.6.0&quot;, :deps/manifest :mvn, :paths [&quot;/Users/calebmacdonaldblack/.m2/repository/http-kit/http-kit/2.6.0/http-kit-2.6.0.jar&quot;], :dependents [], :children ()}}, :test-paths [&quot;/Users/calebmacdonaldblack/IdeaProjects/pathom-example/src/test/clj&quot; &quot;/Users/calebmacdonaldblack/IdeaProjects/pathom-example/src/test/resources&quot;]}" />
              <option name="hash" value="310e2494333030489211ef977b00842c" />
            </ModuleDetails>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Test Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="kind-kind" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="i3ql0e65" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2EuTXq0pBmon8V6gE1M4TFDraN3" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/Users/calebmacdonaldblack/IdeaProjects/pathom-example",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "com.maddyhome.idea.vim.ui.VimEmulationConfigurable"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/main/clj/com/example" />
    </key>
  </component>
  <component name="ReplState" timestamp="1664816360191">{:repl-history {:ide [], :local [{:command &quot;(-&gt; (doto (DecimalFormat. \&quot;#.###\&quot;)\n      (.setRoundingMode RoundingMode/HALF_UP))\n    (.format 69696.90000000001))&quot;, :offset 114, :ns &quot;solar.beam.entity.charge-test&quot;} {:command &quot;(deftest charge-total-cost-pathom-integration-test\n  (let [interval-data-tmp-file (io/file (format \&quot;/tmp/%s.csv\&quot; (random-uuid)))]\n    (spit interval-data-tmp-file \&quot;datetime,kWh,kW,kVA\\n1/1/18 0:30,638,1276.00,1503.50\\n1/1/18 1:00,632,1264.00,1485.71\\n1/1/18 1:30,628.8,1257.60,1481.96\\n1/1/18 2:00,635.2,1270.40,1488.65\\n\&quot;)\n    (testing \&quot;A more thorough test integrating with other key pathom resolvers\&quot;\n      (d/transact\n        t.entity/conn\n        {:tx-data [{:configuration/id      #uuid\&quot;cfd2ca9e-a80f-4813-b5b5-bf327a4f34b6\&quot;\n                    :configuration/systems [{:system/id                   #uuid\&quot;1b311b58-5500-4d78-82a5-ee8578e02743\&quot;\n                                             :system/kind                 :system/consumer\n                                             :consumer/interval-data-file (.getAbsolutePath interval-data-tmp-file)}\n                                            {:system/id      #uuid\&quot;03a4184d-b5ca-45e9-b6ca-8cf75f0b0b88\&quot;\n                                             :system/kind    :system/meter\n                                             :system/charges [{:charge/id        #uuid\&quot;d81207a6-9e44-40cb-9f44-b81eb1b525ab\&quot;\n                                                               :charge/kind      :tou/any-time\n                                                               :charge/unit-rate :rate/cpkwh\n                                                               :charge/value     0.1}]}]}]})\n      (is (= 69696.90000000001\n             (-&gt; (pci/register entity/pathom-index)\n                 (t.entity/merge-env)\n                 (psm/smart-map {:configuration/id       #uuid\&quot;cfd2ca9e-a80f-4813-b5b5-bf327a4f34b6\&quot;\n                                 :simulation/n-intervals 4})\n                 (:configuration/systems)))))))&quot;, :offset 1773, :ns &quot;solar.beam.entity.charge-test&quot;} {:command &quot;(random-uuid)&quot;, :offset 13, :ns &quot;solar.beam.entity.configuration-test&quot;} {:command &quot;(rmap/rmap! {:foo 1\n             :bar (ref :foo)})&quot;, :offset 50, :ns &quot;com.example.core10&quot;} {:command &quot;(-&gt; (rmap/rmap! \n      {:foo 1\n       :bar (ref :foo)})\n    :foo)&quot;, :offset 65, :ns &quot;com.example.core10&quot;} {:command &quot;(:foo (rmap/rmap! {:foo 1\n                   :bar (ref :foo)}))&quot;, :offset 63, :ns &quot;com.example.core10&quot;} {:command &quot;(:bar (rmap/rmap! {:foo 1\n                   :bar (ref :foo)}))&quot;, :offset 63, :ns &quot;com.example.core10&quot;} {:command &quot;(:bar\n  (rmap/rmap! {:foo 1\n               :bar (rmap/ref :foo)}))&quot;, :offset 66, :ns &quot;com.example.core10&quot;} {:command &quot;(rmap/rmap! {:foo 1\n             :bar (rmap/ref :foo)})&quot;, :offset 55, :ns &quot;com.example.core10&quot;} {:command &quot;(rmap/rmap!\n  {:house {:house/address   \&quot;1 House Street\&quot;\n           :house/occupants [{:occupant/first-name \&quot;Sam\&quot;\n                              :occupant/house      (rmap/ref :house)}\n                             {:occupant/first-name \&quot;Kerry\&quot;\n                              :occupant/house      (rmap/ref :house)}\n                             {:occupant/first-name \&quot;John\&quot;\n                              :occupant/house      (rmap/ref :house)}]}})&quot;, :offset 444, :ns &quot;com.example.core10&quot;} {:command &quot;(def foo \n  {:h1 (prn \&quot;1\&quot;)})&quot;, :offset 28, :ns &quot;com.example.core10&quot;} {:command &quot;(py/db [house-data])&quot;, :offset 20, :ns &quot;com.example.core10&quot;} {:command &quot;(deftest pyramid-test\n  (is\n    (-&gt;&gt; (py/db [{:db/id           0\n                  :house/address   \&quot;1 House Street\&quot;\n                  :house/occupants [{:db/id               1\n                                     :occupant/first-name \&quot;Sam\&quot;}\n                                    {:db/id               2\n                                     :occupant/first-name \&quot;Kerry\&quot;}\n                                    {:db/id               3\n                                     :occupant/first-name \&quot;John\&quot;}]}])\n         (= {0 {:db/id           0\n                :house/address   \&quot;1 House Street\&quot;\n                :house/occupants [[:db/id 1]\n                                  [:db/id 2]\n                                  [:db/id 3]]}\n             1 {:db/id               1\n                :occupant/first-name \&quot;Sam\&quot;}\n             2 {:db/id               2\n                :occupant/first-name \&quot;Kerry\&quot;}\n             3 {:db/id               3\n                :occupant/first-name \&quot;John\&quot;}})))\n\n  (is (= {:db/id {0 {:db/id           0\n                     :house/address   \&quot;1 House Street\&quot;\n                     :house/occupants [[:db/id 1]\n                                       [:db/id 2]\n                                       [:db/id 3]]}\n                  1 {:db/id               1\n                     :occupant/first-name \&quot;Sam\&quot;}\n                  2 {:db/id               2\n                     :occupant/first-name \&quot;Kerry\&quot;}\n                  3 {:db/id               3\n                     :occupant/first-name \&quot;John\&quot;}}}\n         (py/db [{:db/id           0\n                  :house/address   \&quot;1 House Street\&quot;\n                  :house/occupants [{:db/id               1\n                                     :occupant/first-name \&quot;Sam\&quot;}\n                                    {:db/id               2\n                                     :occupant/first-name \&quot;Kerry\&quot;}\n                                    {:db/id               3\n                                     :occupant/first-name \&quot;John\&quot;}]}]))))&quot;, :offset 1982, :ns &quot;com.example.core10&quot;} {:command &quot;(-&gt;&gt; (py/db [{:db/id           0\n              :house/address   \&quot;1 House Street\&quot;\n              :house/occupants [{:db/id               1\n                                 :occupant/first-name \&quot;Sam\&quot;}\n                                {:db/id               2\n                                 :occupant/first-name \&quot;Kerry\&quot;}\n                                {:db/id               3\n                                 :occupant/first-name \&quot;John\&quot;}]}])\n     (= {0 {:db/id           0\n            :house/address   \&quot;1 House Street\&quot;\n            :house/occupants [[:db/id 1]\n                              [:db/id 2]\n                              [:db/id 3]]}\n         1 {:db/id               1\n            :occupant/first-name \&quot;Sam\&quot;}\n         2 {:db/id               2\n            :occupant/first-name \&quot;Kerry\&quot;}\n         3 {:db/id               3\n            :occupant/first-name \&quot;John\&quot;}}))&quot;, :offset 871, :ns &quot;com.example.core10&quot;} {:command &quot;(-&gt;&gt; (py/db [{:db/id           0\n              :house/address   \&quot;1 House Street\&quot;\n              :house/occupants [{:db/id               1\n                                 :occupant/first-name \&quot;Sam\&quot;}\n                                {:db/id               2\n                                 :occupant/first-name \&quot;Kerry\&quot;}\n                                {:db/id               3\n                                 :occupant/first-name \&quot;John\&quot;}]}])\n     (vector {0 {:db/id           0\n                 :house/address   \&quot;1 House Street\&quot;\n                 :house/occupants [[:db/id 1]\n                                   [:db/id 2]\n                                   [:db/id 3]]}\n              1 {:db/id               1\n                 :occupant/first-name \&quot;Sam\&quot;}\n              2 {:db/id               2\n                 :occupant/first-name \&quot;Kerry\&quot;}\n              3 {:db/id               3\n                 :occupant/first-name \&quot;John\&quot;}}))&quot;, :offset 926, :ns &quot;com.example.core10&quot;} {:command &quot;(-&gt;&gt; (py/db [{:db/id           0\n              :house/address   \&quot;1 House Street\&quot;\n              :house/occupants [{:db/id               1\n                                 :occupant/first-name \&quot;Sam\&quot;}\n                                {:db/id               2\n                                 :occupant/first-name \&quot;Kerry\&quot;}\n                                {:db/id               3\n                                 :occupant/first-name \&quot;John\&quot;}]}]\n            :db/id)\n     (= {0 {:db/id           0\n            :house/address   \&quot;1 House Street\&quot;\n            :house/occupants [[:db/id 1]\n                              [:db/id 2]\n                              [:db/id 3]]}\n         1 {:db/id               1\n            :occupant/first-name \&quot;Sam\&quot;}\n         2 {:db/id               2\n            :occupant/first-name \&quot;Kerry\&quot;}\n         3 {:db/id               3\n            :occupant/first-name \&quot;John\&quot;}}))&quot;, :offset 890, :ns &quot;com.example.core10&quot;} {:command &quot;(py/db [{:db/id           0\n         :house/address   \&quot;1 House Street\&quot;\n         :house/occupants [{:db/id               1\n                            :occupant/first-name \&quot;Sam\&quot;}\n                           {:db/id               2\n                            :occupant/first-name \&quot;Kerry\&quot;}\n                           {:db/id               3\n                            :occupant/first-name \&quot;John\&quot;}]}]\n       :db/id)&quot;, :offset 412, :ns &quot;com.example.core10&quot;} {:command &quot;(py/db {:db/id           0\n        :house/address   \&quot;1 House Street\&quot;\n        :house/occupants [{:db/id               1\n                           :occupant/first-name \&quot;Sam\&quot;}\n                          {:db/id               2\n                           :occupant/first-name \&quot;Kerry\&quot;}\n                          {:db/id               3\n                           :occupant/first-name \&quot;John\&quot;}]}\n       :db/id)&quot;, :offset 403, :ns &quot;com.example.core10&quot;} {:command &quot;(py/db [{:db/id           0\n         :house/address   \&quot;1 House Street\&quot;\n         :house/occupants [{:db/id               1\n                            :occupant/first-name \&quot;Sam\&quot;}\n                           {:db/id               2\n                            :occupant/first-name \&quot;Kerry\&quot;}\n                           {:db/id               3\n                            :occupant/first-name \&quot;John\&quot;}]}])&quot;, :offset 398, :ns &quot;com.example.core10&quot;} {:command &quot;(py/entities\n  (py/db [{:db/id           0\n           :house/address   \&quot;1 House Street\&quot;\n           :house/occupants [{:db/id               1\n                              :occupant/first-name \&quot;Sam\&quot;}\n                             {:db/id               2\n                              :occupant/first-name \&quot;Kerry\&quot;}\n                             {:db/id               3\n                              :occupant/first-name \&quot;John\&quot;}]}]))&quot;, :offset 428, :ns &quot;com.example.core10&quot;} {:command &quot;(deftest pyramid-test\n  (is\n    (-&gt;&gt; (py/db [{:db/id           0\n                  :house/address   \&quot;1 House Street\&quot;\n                  :house/occupants [{:db/id               1\n                                     :occupant/first-name \&quot;Sam\&quot;}\n                                    {:db/id               2\n                                     :occupant/first-name \&quot;Kerry\&quot;}\n                                    {:db/id               3\n                                     :occupant/first-name \&quot;John\&quot;}]}])\n         :db/id\n         (= {0 {:db/id           0\n                :house/address   \&quot;1 House Street\&quot;\n                :house/occupants [[:db/id 1]\n                                  [:db/id 2]\n                                  [:db/id 3]]}\n             1 {:db/id               1\n                :occupant/first-name \&quot;Sam\&quot;}\n             2 {:db/id               2\n                :occupant/first-name \&quot;Kerry\&quot;}\n             3 {:db/id               3\n                :occupant/first-name \&quot;John\&quot;}}))))&quot;, :offset 993, :ns &quot;com.example.core10&quot;} {:command &quot;(deftest subtraction\n  (is (= 1 (- 4 3)))\n  (is (= 6 (- 7 4))))&quot;, :offset 63, :ns &quot;com.example.core10&quot;} {:command &quot;(coll? {})&quot;, :offset 10, :ns &quot;com.example.core10&quot;} {:command &quot;(coll? [])&quot;, :offset 10, :ns &quot;com.example.core10&quot;} {:command &quot;(coll? \&quot;\&quot;)&quot;, :offset 10, :ns &quot;com.example.core10&quot;} {:command &quot;(coll? '())&quot;, :offset 11, :ns &quot;com.example.core10&quot;} {:command &quot;(coll? (first {:foo :bar}))&quot;, :offset 27, :ns &quot;com.example.core10&quot;} {:command &quot;(py/db\n  {:person/id 0 :person/name \&quot;Rachel\&quot;\n   :friend/list [{:person/id 1 :person/name \&quot;Marco\&quot;}\n                 {:person/id 2 :person/name \&quot;Cassie\&quot;}\n                 {:person/id 3 :person/name \&quot;Jake\&quot;}\n                 {:person/id 4 :person/name \&quot;Tobias\&quot;}\n                 {:person/id 5 :person/name \&quot;Ax\&quot;}]})&quot;, :offset 310, :ns &quot;com.example.core10&quot;} {:command &quot;(py/db\n  [{:person/id 0 :person/name \&quot;Rachel\&quot;\n    :friend/list [{:person/id 1 :person/name \&quot;Marco\&quot;}\n                  {:person/id 2 :person/name \&quot;Cassie\&quot;}\n                  {:person/id 3 :person/name \&quot;Jake\&quot;}\n                  {:person/id 4 :person/name \&quot;Tobias\&quot;}\n                  {:person/id 5 :person/name \&quot;Ax\&quot;}]}])&quot;, :offset 317, :ns &quot;com.example.core10&quot;} {:command &quot;(py/db\n  [{:person/id 0 :person/name \&quot;Rachel\&quot;\n    :friend/list [{:person/id 2 :person/name \&quot;Cassie\&quot;}]}\n   {:person/id 0\n    :friend/list [{:person/id 1 :person/name \&quot;Marco\&quot;}]}])&quot;, :offset 177, :ns &quot;com.example.core10&quot;} {:command &quot;(py/pull foo [[:py/id #uuid\&quot;7045f9bc-1b51-4b2f-9adb-7c62475c31b1\&quot;]])&quot;, :offset 68, :ns &quot;com.example.core10&quot;} {:command &quot;(def foo (-&gt; {:house/address   \&quot;1 House Street\&quot;\n              :house/occupants [{:occupant/first-name \&quot;Sam\&quot;}\n                                {:occupant/first-name \&quot;Kerry\&quot;}\n                                {:occupant/first-name \&quot;John\&quot;}]}\n             (-&gt;pyramid-db)))&quot;, :offset 265, :ns &quot;com.example.core10&quot;} {:command &quot;foo&quot;, :offset 3, :ns &quot;com.example.core10&quot;} {:command &quot;(-&gt; {:house/address   \&quot;1 House Street\&quot;\n     :house/occupants [{:occupant/first-name \&quot;Sam\&quot;}\n                       {:occupant/first-name \&quot;Kerry\&quot;}\n                       {:occupant/first-name \&quot;John\&quot;}]}\n    (-&gt;pyramid-db))&quot;, :offset 219, :ns &quot;com.example.core10&quot;} {:command &quot;(set! *print-namespace-maps* false)&quot;, :offset 35, :ns &quot;user&quot;} {:command &quot;(clojure.tools.namespace.repl/refresh)&quot;, :offset 38, :ns &quot;user&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration default="true" type="Babashka" factoryName="BabashkaLocalRepl" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="bbPath" value="" />
      <setting name="parameters" value="" />
      <option name="PARENT_ENVS" value="true" />
      <setting name="workingDir" value="" />
      <setting name="focusEditor" value="false" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <setting name="focusEditor" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <setting name="focusEditor" value="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="637c114c-5487-480f-807c-2ab5c2ce974e" name="Changes" comment="" />
      <created>1663444511881</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663444511881</updated>
      <workItem from="1663444513133" duration="12295000" />
      <workItem from="1663898584025" duration="121000" />
      <workItem from="1664147397490" duration="3317000" />
      <workItem from="1664213740034" duration="12080000" />
      <workItem from="1664241223330" duration="1161000" />
      <workItem from="1664497083112" duration="602000" />
      <workItem from="1664758114026" duration="3122000" />
      <workItem from="1665101490222" duration="662000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>